<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
           http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/aop
           http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
           http://www.springframework.org/schema/tx
           http://www.springframework.org/schema/tx/spring-tx.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-3.0.xsd">

	<context:annotation-config />

	<context:component-scan
		base-package="com.imooc.mvcdemo">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<!-- 该标签有一个属性proxy-target-class，如果设置为true，
	则表明要代理的类是没有实现任何接口的， 这时spring会选择Cglib创建代理。
	讲到这里就应该讲一讲java创建代理的方法： 
		1、使用Java动态代理来创建，用到InvocationHandler和Proxy，
		该方式只能为接口实例创建代理。
		2、使用CGLIB代理，就可以不局限于只能是实现了接口的类实例了。
		spring aop首先选择Java动态代理来创建，
		如果发现代理对象没有实现任何接口，就会改用cglib。
		刚这儿说到的proxy-target-class，如果设置为true，就是强制使用cglib创建代理。 -->
	<aop:aspectj-autoproxy proxy-target-class="true" />
</beans>